ssl_certificate /etc/nginx/ssl/nginx.crt;
ssl_certificate_key /etc/nginx/ssl/nginx.key;

ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:RC4:HIGH:!MD5:!aNULL:!EDH:!CAMELLIA;
ssl_prefer_server_ciphers  on;
ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 5m;


lua_shared_dict my_upstream 1m;
init_by_lua '
  Upstream_Socket  = require("resty.upstream.socket")
  Upstream_HTTP = require("resty.upstream.http")
  Upstream_Api = require("resty.upstream.api")
  local configured
  upstream, configured = Upstream_Socket:new("my_upstream")
  if not upstream then
      error(configured)
  end
  api            = Upstream_Api:new(upstream)
  http_upstream  = Upstream_HTTP:new(upstream)
  if not configured then -- Only reconfigure on start, shared mem persists across a HUP
      api:create_pool({id = "primary", timeout = 1000, read_timeout = 10000, keepalive_pool = 256, keepalive_timeout = (120*1000)})
      --api:add_host("primary", { host = "192.168.33.65", port = "80", weight = 10, healthcheck = true})
      api:add_host("primary", { host = "127.0.0.1", port = "8080", weight = 10, healthcheck = true})
--[[
      api:add_host("primary", { host = "127.0.0.1", port = "82",  weight = 10, healthcheck = true})
      api:create_pool({id = "dr", timeout = 100, priority = 10, read_timeout = 60000})
      api:add_host("dr", { host = "10.10.10.10", port = "81", weight = 10})
      api:add_host("dr", { host = "10.10.10.10", port = "82",  weight = 10})
]]
  end
  upstream_ssl, configured = Upstream_Socket:new("my_upstream", "ssl_upstream")
  if not upstream_ssl then
      error(configured)
  end
  api_ssl        = Upstream_Api:new(upstream_ssl)
  https_upstream = Upstream_HTTP:new(upstream_ssl, {ssl = true, ssl_verify =false, sni_host = "tw-magento.dev" })
  if not configured then -- Only reconfigure on start, shared mem persists across a HUP
      api_ssl:create_pool({id = "primary", timeout = 1000, read_timeout = 10000, keepalive_pool = 256, keepalive_timeout = (120*1000)})
      api_ssl:add_host("primary", { host = "127.0.0.1", port = "8083", weight = 10, healthcheck = true})
      --api_ssl:add_host("primary", { host = "127.0.0.1", port = "84",  weight = 10, healthcheck = true})
      --api_ssl:create_pool({id = "dr", timeout = 100, priority = 10, read_timeout = 60000})
      --api_ssl:add_host("dr", { host = "10.10.10.10", port = "83", weight = 10})
      --api_ssl:add_host("dr", { host = "10.10.10.10", port = "84",  weight = 10})
  end
';

init_worker_by_lua '
  http_upstream:init_background_thread()
  https_upstream:init_background_thread()
';
